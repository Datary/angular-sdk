function api(t,n,e,r,u,i,o,c,a,f,s,d){return{connection:function(){return new e},oracle:function(){return new r},user:function(t){return new u(t)},repo:function(t){return new i(t)},workingDir:function(t){return new o(t)},commit:function(t){return new c(t)},tree:function(t){return new a(t)},lump:function(t){return new f(t)},head:function(t){return new s(t)},tag:function(t){return new d(t)}}}function commit(t,n){function e(e){return n.get("//api.datary.io/"+e+"/branch").then(function(t){return t.data},function(n){return t.reject(n)})}function r(e){return n.get("//api.datary.io/"+e+"/tree").then(function(t){return t.data},function(n){return t.reject(n)})}return function(t){this._id=t,this.retrieveBranch=function(){return e(t)},this.retrieveTree=function(){return r(t)}}}function Connection(t,n){function e(e){return n.post("//api.datary.io/connection/signIn?provider=datary",e).then(function(t){return t.headers("X-Set-Token")},function(n){return t.reject(n)})}function r(){return n.get("//api.datary.io/connection/signOut").then(function(t){return t.status},function(n){return t.reject(n)})}function u(e){return n.post("//api.datary.io/connection/signUp",e).then(function(t){return t.data},function(n){return t.reject(n)})}function i(e){return n.get("//api.datary.io/connection/signRequest&operation="+e.operation+"&basename="+e.basename+"&contentType="+e.contentType).then(function(t){return t.data},function(n){return t.reject(n)})}this.signIn=function(t){return e(t)},this.connect=function(){return connect()},this.signOut=function(){return r()},this.signUp=function(t){return u(t)},this.signRequest=function(t){return i(t)}}function Head(t,n){function e(e){return n.get("//api.datary.io/"+e+"/branch").then(function(t){return console.log(t),t.data},function(n){return t.reject(n)})}this._id=id,this.retrieveBranch=function(){return e(id)}}function lumpFactory(t,n){function e(e){return n.get("//api.datary.io/"+e+"preview").then(function(t){return t.data},function(n){return t.reject(n)})}function r(e){return n.get("//api.datary.io/"+e+"/extract").then(function(t){return t.data},function(n){return t.reject(n)})}function u(e){return n.get("//api.datary.io/"+e+"/whole").then(function(t){return t.data},function(n){return t.reject(n)})}return function(t){this._id=t,this.retrieveContentPreview=function(){return e(t)},this.retrieveContentExtract=function(){return r(t)},this.retrieveContentWhole=function(){return u(t)}}}function oracleFactory(t,n){function e(){return n.get("//api.datary.io/oracle/listUsers").then(function(t){return t.data},function(n){return t.reject(n)})}function r(){return n.get("//api.datary.io/oracle/listRepos").then(function(t){return t.data},function(n){return t.reject(n)})}return function(){this.listUsers=function(){return e()},this.listRepos=function(){return r()}}}function repo(t,n){function e(e){return n.get("//api.datary.io/"+e).then(function(t){return t.data},function(n){return t.reject(n)})}function r(n){return e(n).then(function(t){return describeWorkingDir(t.workingDir)}).then(function(t){return t},function(n){return t.reject(n)})}function u(n){return e(n).then(function(t){return retrieveTreeFromCommit(t.apex)}).then(function(t){return t},function(n){return t.reject(n)})}function i(e){return n.get("//api.datary.io/"+e+"/readme").then(function(t){return t.data},function(n){return t.reject(n)})}function o(e){return n.get("//api.datary.io/"+e+"/license").then(function(t){return t.data},function(n){return t.reject(n)})}function c(e){return n.get("//api.datary.io/"+e+"/heads").then(function(t){return t.data},function(n){return t.reject(n)})}function a(e){return n.get("//api.datary.io/"+e+"/tags").then(function(t){return t.data},function(n){return t.reject(n)})}function f(e,r){return n.post("//api.datary.io/"+r+"/index",e).then(function(t){return r},function(n){return t.reject(n)})}function s(e,r){return n.put("//api.datary.io/"+r,e).then(function(t){return r},function(n){return t.reject(n)})}function d(e){return n["delete"]("//api.datary.io/"+e).then(function(t){return e},function(n){return t.reject(n)})}return function(t){this._id=t,this.describe=function(){return e(t)},this.retrieveWorkingDir=function(){return r(t)},this.retrieveApexTree=function(){return u(t)},this.retrieveReadme=function(){return i(t)},this.retrieveLicense=function(){return o(t)},this.retrieveHeads=function(){return c(t)},this.retrieveTags=function(){return a(t)},this.commitIndex=function(n){return f(n,t)},this.updateDetails=function(n){return s(n,t)},this.remove=function(){return d(t)}}}function Tag(t,n){function e(e){return n.get("//api.datary.io/"+e+"/branch").then(function(t){return console.log(t),t.data},function(n){return t.reject(n)})}this._id=id,this.retrieveBranch=function(){return e(id)}}function interceptor(t,n,e){return{request:function(t){return t.headers=t.headers||{},e.localStorage.authToken&&"undefined"!==e.localStorage.authToken&&"null"!==e.localStorage.authToken&&(t.headers.Authorization="Bearer "+e.localStorage.authToken),t},response:function(t){switch(t.status){case 300:case 301:console.log("Successful API call. Redirecting.");break;case 200:case 201:case 204:console.log("Successful API call.");break;default:console.log("Successful API call.")}return t},responseError:function(n){switch(n.status){case 401:case 403:console.log("Unsuccessful API call. Authentication/Authorization failed.");break;case 404:console.log("Unsuccessful API call. Document not found.");break;default:console.log("Unsuccessful API call.")}return n.data=n.data||{},t.reject(n.data)}}}function treeFactory(t,n){function e(e){return n.get("//api.datary.io/"+e).then(function(t){return t.data},function(n){return t.reject(n)})}return function(t){this._id=t,this.describe=function(){return e(t)}}}function user(t,n){function e(e){return n.get("//api.datary.io/"+e).then(function(t){return t.data},function(n){return t.reject(n)})}function r(e){return n.get("//api.datary.io/"+e+"/repos").then(function(t){return t.data},function(n){return t.reject(n)})}function u(e,r){return n.post("//api.datary.io/"+r+"/repos",e).then(function(t){return t.data},function(n){return t.reject(n)})}function i(e,r){return n.put("//api.datary.io/"+r,e).then(function(t){return t},function(n){return t.reject(n)})}function o(e,r){return n.put("//api.datary.io/"+r+"/username",e).then(function(t){return t},function(n){return t.reject(n)})}function c(e,r,u){var i={oldPassword:e,newPassword:r};return n.put("//api.datary.io/"+u+"/password",i).then(function(t){return t},function(n){return t.reject(n)})}function a(e){return n["delete"]("//api.datary.io/"+e).then(function(t){return e},function(n){return t.reject(n)})}return function(t){this._id=t,this.describe=function(){return e(t)},this.retrieveRepos=function(){return r(t)},this.createRepo=function(n){return u(n,t)},this.updateProfile=function(n){return i(n,t)},this.changeUsername=function(n){return o(n,t)},this.changePassword=function(n,e){return c(n,e,t)},this.remove=function(){return a(t)}}}function workingDir(t,n){function e(e){return n.get("//api.datary.io/"+e).then(function(t){return t.data},function(n){return t.reject(n)})}function r(e,r){return n.post("//api.datary.io/"+r+"/changes",e).then(function(t){return t.status},function(n){return t.reject(n)})}return function(t){this._id=t,this.describe=function(){return e(t)},this.stageChange=function(n){return r(n,t)}}}angular.module("dySdk").factory("$$$api",api),api.$inject=["$q","$http","DyConnection","DyOracle","DyUser","DyRepo","DyWorkingDir","DyCommit","DyTree","DyLump","DyHead","DyTag"],angular.module("dySdk").factory("DyCommit",["$q","$http",commit]),angular.module("dySdk").factory("DyConnection",["$q","$http",Connection]),angular.module("dySdk").factory("DyHead",["$q","$http",Head]),angular.module("dySdk").factory("DyLump",["$q","$http",lumpFactory]),angular.module("dySdk",[]),angular.module("dySdk").factory("DyOracle",["$q","$http",oracleFactory]),angular.module("dySdk").factory("dyRepo",["$q","$http",repo]),angular.module("dySdk").factory("DyTag",["$q","$http",Tag]),angular.module("dySdk").factory("$$$tokenInterceptor",interceptor),interceptor.$inject=["$q","$location","$window"],angular.module("dySdk").factory("DyTree",["$q","$http",treeFactory]),angular.module("dySdk").factory("DyUser",user),user.$inject=["$q","$http"],angular.module("dySdk").factory("$$$api",["$q","$http",workingDir]);